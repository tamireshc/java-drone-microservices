networks:
  msdrones-network:
    driver: bridge

services:
  ms-eureka-server:
    container_name: ms-eureka-server
    build: ./eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
    networks:
      - msdrones-network

  gateway:
    container_name: gateway
    build: ./gateway
    ports:
      - "8080:8080"
    depends_on:
      - ms-eureka-server
      - rabbitmq
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://ms-eureka-server:8761/eureka/
    networks:
      - msdrones-network

  ms-gerenciador-cadastros:
    container_name: ms-gerenciador-cadastros
    build: ./ms-gerenciador-cadastros
    depends_on:
      db-gerenciador-cadastros:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-gerenciador-cadastros:5432/gerenciador-cadastros
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=8j65*h90
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://ms-eureka-server:8761/eureka/
      - SERVER_PORT=${SERVER_PORT:-0}
    networks:
      - msdrones-network

  ms-gerenciador-pedidos:
    container_name: ms-gerenciador-pedidos
    build: ./ms-gerenciador-pedidos
    depends_on:
      db-gerenciador-pedidos:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-gerenciador-pedidos:5432/gerenciador-pedidos
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=8j65*h90
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://ms-eureka-server:8761/eureka/
      - SERVER_PORT=${SERVER_PORT:-0}
    networks:
      - msdrones-network

  ms-monitoramento:
    container_name: ms-monitoramento
    build: ./ms-monitoramento
    depends_on:
      db-monitoramento:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-monitoramento:5432/monitoramento
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=8j65*h90
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://ms-eureka-server:8761/eureka/
      - SERVER_PORT=${SERVER_PORT:-0}
    networks:
      - msdrones-network

  ms-notificador:
    container_name: ms-notificador
    build: ./ms-notificador
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./ms-notificador/.env
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://ms-eureka-server:8761/eureka/
      - SERVER_PORT=${SERVER_PORT:-0}
    networks:
      - msdrones-network

  db-gerenciador-cadastros:
    container_name: db-gerenciador-cadastros
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=8j65*h90
      - POSTGRES_DB=gerenciador-cadastros
    networks:
      - msdrones-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -p 5432"]
      interval: 30s
      timeout: 10s
      retries: 3

  db-gerenciador-pedidos:
    container_name: db-gerenciador-pedidos
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=8j65*h90
      - POSTGRES_DB=gerenciador-pedidos
    networks:
      - msdrones-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -p 5432"]
      interval: 30s
      timeout: 10s
      retries: 3

  db-monitoramento:
    container_name: db-monitoramento
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=8j65*h90
      - POSTGRES_DB=monitoramento
    networks:
      - msdrones-network
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -p 5432"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - msdrones-network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status > /dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 5
